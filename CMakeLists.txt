cmake_minimum_required(VERSION 3.5)
project(qlocky VERSION 0.1 LANGUAGES CXX)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED TRUE)
set(CMAKE_COLOR_DIAGNOSTICS TRUE)

find_package(QT NAMES Qt6 Qt5 REQUIRED COMPONENTS Widgets)
find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Widgets)

set(SOURCES_DIR_BASENAME "src")
set(SOURCES_DIR "${CMAKE_SOURCE_DIR}/${SOURCES_DIR_BASENAME}")

set(HEADERS_DIR_BASENAME "include")
set(HEADERS_DIR "${CMAKE_SOURCE_DIR}/${HEADERS_DIR_BASENAME}")

set(FORMS_DIR_BASENAME "forms")
set(FORMS_DIR "${CMAKE_SOURCE_DIR}/${FORMS_DIR_BASENAME}")

list(APPEND CMAKE_AUTOUIC_SEARCH_PATHS ${FORMS_DIR})

file(GLOB_RECURSE SOURCES
	${SOURCES_DIR}/*.cpp
	${SOURCES_DIR}/*.c
)
file(GLOB_RECURSE HEADERS
	${HEADERS_DIR}/*.hpp
	${HEADERS_DIR}/*.h
)
file(GLOB_RECURSE FORMS
	${FORMS_DIR}/*.ui
)

set(PROJECT_SOURCES ${SOURCES} ${HEADERS} ${FORMS})

if (${QT_VERSION_MAJOR} GREATER_EQUAL 6)
	qt_add_executable(${PROJECT_NAME} MANUAL_FINALIZATION ${PROJECT_SOURCES})
else()
	if (ANDROID)
		add_library(${PROJECT_NAME} SHARED ${PROJECT_SOURCES})
	else()
		add_executable(${PROJECT_NAME} ${PROJECT_SOURCES})
	endif()
endif()

target_link_libraries(${PROJECT_NAME} PRIVATE Qt${QT_VERSION_MAJOR}::Widgets)
target_include_directories(${PROJECT_NAME} PUBLIC ${HEADERS_DIR})

set_target_properties(${PROJECT_NAME} PROPERTIES
	MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
	MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
	MACOSX_BUNDLE TRUE
	WIN32_EXECUTABLE TRUE
)

install(TARGETS ${PROJECT_NAME}
	BUNDLE DESTINATION .
	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})

if(QT_VERSION_MAJOR EQUAL 6)
	qt_finalize_executable(${PROJECT_NAME})
endif()
